"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./app/hooks/useChat.ts":
/*!******************************!*\
  !*** ./app/hooks/useChat.ts ***!
  \******************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useChat: () => (/* binding */ useChat)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* __next_internal_client_entry_do_not_use__ useChat auto */ \nconst useChat = function() {\n    let initialConfig = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {\n        model: 'llama3.2:3b'\n    };\n    const [messages, setMessages] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);\n    const [isLoading, setIsLoading] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n    const [config, setConfig] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(initialConfig);\n    const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    const addMessage = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((message)=>{\n        const generateId = ()=>{\n            if (typeof crypto !== 'undefined' && typeof crypto.randomUUID === 'function') {\n                return crypto.randomUUID();\n            }\n            return \"\".concat(Date.now(), \"-\").concat(Math.random().toString(36).slice(2, 10));\n        };\n        const newMessage = {\n            ...message,\n            id: generateId(),\n            timestamp: new Date()\n        };\n        setMessages((prev)=>[\n                ...prev,\n                newMessage\n            ]);\n        return newMessage;\n    }, []);\n    const sendMessage = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(async (content)=>{\n        if (!content.trim() || isLoading) return;\n        addMessage({\n            role: 'user',\n            content\n        });\n        setIsLoading(true);\n        setError(null);\n        try {\n            const assistantMessage = addMessage({\n                role: 'assistant',\n                content: ''\n            });\n            console.log('model: ' + config.model + ', content: ' + content);\n            const response = await fetch('http://localhost:8080/api/ai/chat', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    message: content,\n                    model: config.model\n                })\n            });\n            if (!response.ok) throw new Error(\"HTTP error! status: \".concat(response.status));\n            if (!response.body) throw new Error('No response body');\n            const reader = response.body.getReader();\n            const decoder = new TextDecoder();\n            let accumulatedContent = '';\n            let shouldStop = false;\n            while(true){\n                const { value } = await reader.read();\n                const chunk = decoder.decode(value, {\n                    stream: true\n                });\n                console.info('chunk: ' + chunk);\n                if (!chunk) continue;\n                let data = chunk.trim();\n                if (chunk.startsWith('data:')) {\n                    data = chunk.slice(5).trim();\n                    if (!chunk) continue;\n                }\n                try {\n                    var _payload_message;\n                    const payload = JSON.parse(data);\n                    const done = payload === null || payload === void 0 ? void 0 : payload.done;\n                    if (done) {\n                        shouldStop = true;\n                        break;\n                    }\n                    var _payload_message_content;\n                    const token = (_payload_message_content = payload === null || payload === void 0 ? void 0 : (_payload_message = payload.message) === null || _payload_message === void 0 ? void 0 : _payload_message.content) !== null && _payload_message_content !== void 0 ? _payload_message_content : '';\n                    if (token) {\n                        accumulatedContent += token;\n                        setMessages((prev)=>prev.map((msg)=>msg.id === assistantMessage.id ? {\n                                    ...msg,\n                                    content: accumulatedContent\n                                } : msg));\n                    }\n                    if ((payload === null || payload === void 0 ? void 0 : payload.done) === true) {\n                        shouldStop = true;\n                        break;\n                    }\n                } catch (e) {\n                    // Fallback: treat as raw token text\n                    accumulatedContent += data;\n                    setMessages((prev)=>prev.map((msg)=>msg.id === assistantMessage.id ? {\n                                ...msg,\n                                content: accumulatedContent\n                            } : msg));\n                }\n                if (shouldStop) break;\n            }\n        } catch (err) {\n            setError(err instanceof Error ? err.message : 'An error occurred');\n            setMessages((prev)=>prev.slice(0, -1));\n        } finally{\n            setIsLoading(false);\n        }\n    }, [\n        addMessage,\n        isLoading,\n        config.model\n    ]);\n    const clearMessages = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(()=>{\n        setMessages([]);\n        setError(null);\n    }, []);\n    return {\n        messages,\n        isLoading,\n        error,\n        config,\n        setConfig,\n        sendMessage,\n        clearMessages\n    };\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/hooks/useChat.ts\n"));

/***/ })

});